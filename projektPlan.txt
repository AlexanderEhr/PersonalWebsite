Projektplanung und Design

1. Projektstruktur

MyPersonalWebsite/
│
├── index.php
├── about.php
├── education.php
├── contact.php
├── images/
│   ├── probebild1.png
│   ├── probebild2.png
│   └── (weitere Bilder für die Website)
├── css/
│   ├── about.css
│   ├── education.css
│   ├── contact.css
│   ├── footer.css
│   ├── global.css
│   ├── header.css
│   ├── index.css
│   └── (weitere CSS-Dateien)
├── js/
│   ├── main.js
│   └── (weitere JavaScript-Dateien)
│
├── src/
│   ├── config/
│   │   └── config.php
│   │   ├── templates/
│   │   │   ├── header.php
│   │   │   └── footer.php
│   │   └── (weitere View-Dateien)
│   ├── helpers/
│   │   ├── loadStyles.php
│   │   ├── utility.php
│   │   └── titelFunktion.php
│   └── (weitere PHP-Hilfsklassen)
├── .gitignore
├── README.md
└── TODO.md


    Functions and Pages

    Home (index.php): Overview of your information and links to other pages.
    About Me (about.php): Detailed information about you and your experiences.
    Portfolio (portfolio.php): A gallery or list of your projects and works.
    Contact (contact.php): A contact form that sends emails.


    Design

    Create Wireframes: Sketch the layout of each page.
    Responsive Design: Use flexible layout and media queries to ensure the website looks good on all devices.
    Modern UI Frameworks: Consider using frameworks like Bootstrap or Materialize.

    Technology and Tools

    Frontend: HTML, CSS, JavaScript.
    Backend: PHP for server logic and data processing.
    Database: MySQL for data persistence (optional, for extended functions like the admin area).
    Security: CSRF and XSS protection, secure data processing, password hashing.
    SEO: Meta tags, clean URLs, optimized loading times.

    Development Environment

    VS Code: Main editor for development.
    XAMPP: Local server for PHP and MySQL development.
    Git: Version control and collaboration via GitHub.

    Implementation Phase

    Basic Functionality:
        Build the basic page structure.
        Implement navigation and the basic layout.
        Create the contact form with validation and email sending.
    Additional Functionality:
        Implement a dynamic portfolio page with PHP.
        Admin area for managing portfolio projects (optional).

    Documentation

    Code Comments: Ensure the code is well-commented.
    User Documentation: A simple guide for using and maintaining the website.
    Developer Documentation: Details about the project structure and development practices.
